# Steps
# Install Sarracenia (sr) v3 from apt
# Define a TARGET_DIR for sr v3 subscriptions
#
# Intended usage : Ouptput to localdir on host running docker.  Shown below is running the image built as :
# docker build -t ymoisan/sr3-local -f Dockerfile_local .
#

# docker run -d -e sr3_conf=swob -e blob_path=swob-test-yves -e duration=3600 
# -v /home/yves/.config/sr3/subscribe:/home/g2c/.config/sr3/subscribe 
# -v /home/yves/azure/sarra_mount:/home/g2c/output 
# ymoisan/sr3-local
#
# where environment variables passed to the container (-e) are :
# - sr3_conf : the name of sr3 configuration file located in the `subscribe` directory of /home/yves/.config/sr3/subscribe
# - blob_path : the name of the sub-directory in /home/yves/azure/sarra_mount where files will end u
# - duration : container time to live in seconds

# IMPORTANT : mapping the container's `home/g2c/.config/sr3/output` directory to a local directory
# which is ITSELF FUSE mounted to cloud storage has the effect of uploading files on the cloud.  
# FUSE mounting cooud storage : `s3fs` for S3 buckets or `blobfuse2` for Azure blob storage containers
# FUSE mounting directories on the host means no credentials are included in -- or need to be passed to --
# the image at runtime
FROM ubuntu:22.04 as base
# FROM python:3.10-slim-bullseye as base
LABEL org.opencontainers.image.authors="yves.moisan@ec.gc.ca"

# Duration (s) that sr3 will be running for; defaults to 60
ENV duration 60
# sr3 configuration file
ENV sr3_conf swob

RUN apt-get update &&  apt-get install -y gnupg software-properties-common sudo

RUN adduser --disabled-password --gecos '' g2c && adduser g2c sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

USER g2c
WORKDIR /home/g2c

# Add sr3
RUN sudo add-apt-repository ppa:ssc-hpc-chp-spc/metpx && sudo apt update \
    && sudo apt-get -y install metpx-sr3 python3-amqp

# We have to create directories in /home/g2c for sr3 to work
# IMPORTANT : Running this image needs each of the 5 directories to be mapped to localhost directories
# e.g.
# docker run -d \
# -e duration=10 \
# -e sr3_conf=swob \
# -v /localhost_config_dir/subscribe:/home/g2c/.config/sr3/subscribe \
# -v /localhost_config_dir/log:/home/g2c/.config/sr3/log \
# -v /localhost_cache_dir/subscribe:/home/g2c/.cache/sr3/subscribe \
# -v /localhost_cache_dir/log:/home/g2c/.cache/sr3/log \
# -v /localhost_fuse-mounted_dir:/home/g2c/.config/sr3/output \
# image

ENV blob_path cmc

RUN mkdir -p /home/g2c/.config/sr3/subscribe
   # && cp /usr/lib/python3/dist-packages/sarracenia/examples/subscribe/dd_swob.conf /home/g2c/.config/sr3/subscribe
# TODO : ADD A STAGE TO KEEP SR3 ONLY

# OLD CMD sr3 start subscribe/$sr3_conf && sleep $duration && sr3 stop subscribe/$sr3_conf && sleep 10
CMD epoch_microsec=`date +%s%6N` && orig=`echo $sr3_conf`.conf && dest=`echo $sr3_conf'_'$epoch_microsec`.conf \
    && cd /home/g2c/.config/sr3/subscribe  \
    && cp $orig $dest && echo "directory /home/g2c/output/$blob_path\naccept .*" >> $dest \ 
    && mkdir -p /home/g2c/output/ \
    && sr3 start subscribe/$sr3_conf'_'$epoch_microsec && sleep $duration \ 
    && sr3 stop subscribe/$sr3_conf'_'$epoch_microsec && sleep 20 && exit

